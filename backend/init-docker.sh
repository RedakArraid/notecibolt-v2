#!/bin/sh

echo "üöÄ Initialisation du backend NoteCibolt v2 dans Docker"

# Attendre que PostgreSQL soit pr√™t
echo "‚è≥ Attente de PostgreSQL..."
until nc -z postgres 5432; do
  echo "PostgreSQL pas encore pr√™t, attente..."
  sleep 2
done
echo "‚úÖ PostgreSQL pr√™t"

# Installer les d√©pendances si n√©cessaire
if [ ! -d "node_modules" ] || [ ! -f "node_modules/.installed" ]; then
    echo "üì¶ Installation des d√©pendances..."
    npm install
    touch node_modules/.installed
fi

# G√©n√©rer le client Prisma
echo "üîß G√©n√©ration du client Prisma..."
npx prisma generate

# Appliquer les migrations
echo "üóÑÔ∏è Application des migrations..."
npx prisma migrate deploy 2>/dev/null || {
    echo "Migration √©chou√©e, tentative de push..."
    npx prisma db push --force-reset
}

# Seeder la base de donn√©es si elle est vide (mode d√©veloppement uniquement)
echo "üå± V√©rification du seeding..."
if [ "$NODE_ENV" = "development" ]; then
    echo "Mode d√©veloppement d√©tect√©, seeding des donn√©es..."
    npx prisma db seed 2>/dev/null || {
        echo "‚ö†Ô∏è Seeding √©chou√©, mais on continue..."
    }
else
    echo "Mode production, seeding ignor√©"
fi

echo "‚úÖ Initialisation termin√©e, d√©marrage du serveur..."

# D√©marrer le serveur avec gestion d'erreurs am√©lior√©e
exec nodemon --watch src --ext ts --exec "ts-node --transpile-only -r tsconfig-paths/register src/app.ts"
