services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:15-alpine
    platform: linux/arm64/v8
    container_name: notecibolt_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: notecibolt_db
      POSTGRES_USER: notecibolt_user
      POSTGRES_PASSWORD: notecibolt_password
    ports:
      - "5433:5432"  # Utiliser le port 5433 pour éviter les conflits
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - notecibolt_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notecibolt_user -d notecibolt_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cache Redis
  redis:
    image: redis:7-alpine
    platform: linux/arm64/v8
    container_name: notecibolt_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - notecibolt_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (mode développement)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    platform: linux/arm64/v8
    container_name: notecibolt_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://notecibolt_user:notecibolt_password@postgres:5432/notecibolt_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: super-secret-refresh-key-change-in-production
      PORT: 3001
      FRONTEND_URL: http://localhost:5173
      EMAIL_HOST: mailpit
      EMAIL_PORT: 1025
      EMAIL_USER: test@notecibolt.com
      EMAIL_PASSWORD: ""
      SCHOOL_NAME: "École NoteCibolt"
      ACADEMIC_YEAR: "2024-2025"
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    command: ["/bin/sh", "/app/init-docker.sh"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - notecibolt_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React (mode développement)  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    platform: linux/arm64/v8
    container_name: notecibolt_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001/api/v1
      VITE_WS_URL: ws://localhost:3002
      VITE_DOCKER_MODE: "true"
    ports:
      - "5173:5173"
    volumes:
      # Monter le code source pour le hot reload
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      # Préserver node_modules dans le conteneur
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - notecibolt_network

  # Serveur de développement pour les emails (MailPit)
  mailpit:
    image: axllent/mailpit:latest
    platform: linux/arm64/v8
    container_name: notecibolt_mailpit
    restart: unless-stopped
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Interface web
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - notecibolt_network

  # Adminer pour la gestion de la base de données
  adminer:
    image: adminer:latest
    platform: linux/arm64/v8
    container_name: notecibolt_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - notecibolt_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  notecibolt_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
