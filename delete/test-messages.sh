#!/bin/bash\n\necho \"🧪 Test du Module Messages - Phase 7\"\necho \"====================================\"\n\ncd /Users/kader/Desktop/projet-en-cours/notecibolt-v2\n\necho \"📋 Vérification des fichiers...\"\n\n# Frontend\necho \"✅ Frontend:\"\nls -la frontend/src/components/Messages/MessageList.tsx 2>/dev/null && echo \"  ✅ MessageList.tsx\" || echo \"  ❌ MessageList.tsx\"\nls -la frontend/src/services/api/messagesService.ts 2>/dev/null && echo \"  ✅ messagesService.ts\" || echo \"  ❌ messagesService.ts\"\n\n# Backend\necho \"✅ Backend:\"\nls -la backend/src/modules/messages/routes.ts 2>/dev/null && echo \"  ✅ routes.ts\" || echo \"  ❌ routes.ts\"\nls -la backend/src/modules/middleware/auth.ts 2>/dev/null && echo \"  ✅ auth.ts\" || echo \"  ❌ auth.ts\"\n\necho \"\"\necho \"🚀 Démarrage des serveurs...\"\n\n# Fonction pour démarrer le backend\nstart_backend() {\n    echo \"📡 Démarrage du backend...\"\n    cd backend\n    npm install > /dev/null 2>&1\n    npm run dev &\n    BACKEND_PID=$!\n    cd ..\n    echo \"✅ Backend démarré (PID: $BACKEND_PID)\"\n}\n\n# Fonction pour démarrer le frontend\nstart_frontend() {\n    echo \"🎨 Démarrage du frontend...\"\n    cd frontend\n    npm install > /dev/null 2>&1\n    npm run dev &\n    FRONTEND_PID=$!\n    cd ..\n    echo \"✅ Frontend démarré (PID: $FRONTEND_PID)\"\n}\n\n# Démarrer les serveurs\nstart_backend\nsleep 5\nstart_frontend\nsleep 5\n\necho \"\"\necho \"🧪 Tests de l'API Messages...\"\n\n# Test 1: Health check\necho \"📊 Test 1: Health check\"\ncurl -s http://localhost:3001/health > /dev/null\nif [ $? -eq 0 ]; then\n    echo \"  ✅ Backend accessible\"\nelse\n    echo \"  ❌ Backend non accessible\"\nfi\n\n# Test 2: Messages récents\necho \"📬 Test 2: Messages récents\"\nresponse=$(curl -s -o /dev/null -w \"%{http_code}\" http://localhost:3001/api/v1/messages/recent)\nif [ \"$response\" = \"200\" ]; then\n    echo \"  ✅ API messages/recent: $response\"\nelse\n    echo \"  ❌ API messages/recent: $response\"\nfi\n\n# Test 3: Nombre de messages non lus\necho \"📊 Test 3: Messages non lus\"\nresponse=$(curl -s -o /dev/null -w \"%{http_code}\" http://localhost:3001/api/v1/messages/unread-count)\nif [ \"$response\" = \"200\" ]; then\n    echo \"  ✅ API messages/unread-count: $response\"\nelse\n    echo \"  ❌ API messages/unread-count: $response\"\nfi\n\n# Test 4: Contacts\necho \"👥 Test 4: Contacts\"\nresponse=$(curl -s -o /dev/null -w \"%{http_code}\" http://localhost:3001/api/v1/messages/contacts)\nif [ \"$response\" = \"200\" ]; then\n    echo \"  ✅ API messages/contacts: $response\"\nelse\n    echo \"  ❌ API messages/contacts: $response\"\nfi\n\necho \"\"\necho \"🌐 URLs de test:\"\necho \"  Frontend: http://localhost:5173\"\necho \"  Backend:  http://localhost:3001\"\necho \"  Messages: http://localhost:5173/messages\"\necho \"\"\necho \"🔑 Comptes de test:\"\necho \"  Étudiant: student@notecibolt.com / student123\"\necho \"  Enseignant: teacher@notecibolt.com / teacher123\"\necho \"  Admin: admin@notecibolt.com / admin123\"\necho \"\"\necho \"📱 Fonctionnalités à tester:\"\necho \"  ✅ Affichage des messages récents\"\necho \"  ✅ Recherche dans les messages\"\necho \"  ✅ Filtrage par type (tous/non lus/annonces)\"\necho \"  ✅ Marquer comme lu (clic sur message)\"\necho \"  ✅ Composer un nouveau message\"\necho \"  ✅ Actualisation des données\"\necho \"  ✅ Fallback automatique si API down\"\necho \"\"\necho \"⚠️  Pour arrêter les serveurs:\"\necho \"  kill $BACKEND_PID $FRONTEND_PID\"\necho \"\"\necho \"🎯 Module Messages Phase 7 prêt à tester !\"\n