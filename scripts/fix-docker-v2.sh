#!/bin/bash

# Script de correction am√©lior√© pour Docker NoteCibolt v2
echo "üîß Correction Docker NoteCibolt v2 - Version am√©lior√©e"
echo "=================================================="

# V√©rifier si on est dans le bon r√©pertoire
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå Erreur: Ce script doit √™tre ex√©cut√© depuis le r√©pertoire notecibolt-v2"
    exit 1
fi

echo ""
echo "üìã √âtape 1: V√©rification des fichiers requis..."
./scripts/check-files.sh

echo ""
echo "üõë √âtape 2: Arr√™t propre des services..."
docker-compose down --remove-orphans

echo ""
echo "üßπ √âtape 3: Nettoyage complet..."
# Supprimer les volumes
echo "Suppression des volumes..."
docker volume rm notecibolt-v2_frontend_node_modules 2>/dev/null || true
docker volume rm notecibolt-v2_backend_node_modules 2>/dev/null || true

# Supprimer les images
echo "Suppression des images pour reconstruction..."
docker rmi notecibolt-v2_frontend 2>/dev/null || true
docker rmi notecibolt-v2_backend 2>/dev/null || true

# Nettoyer le cache Docker
echo "Nettoyage du cache Docker..."
docker builder prune -f

echo ""
echo "üî® √âtape 4: Test de build frontend..."
echo "Construction de l'image frontend..."
if docker-compose build --no-cache frontend; then
    echo "‚úÖ Build frontend r√©ussi"
else
    echo "‚ùå √âchec du build frontend"
    echo ""
    echo "üîç Diagnostic d√©taill√©:"
    echo "1. V√©rifier les logs de build:"
    echo "   docker-compose build --no-cache --progress=plain frontend"
    echo ""
    echo "2. V√©rifier les fichiers manquants:"
    echo "   ls -la frontend/"
    echo ""
    echo "3. Test local des d√©pendances:"
    echo "   cd frontend && npm install && npm run build"
    exit 1
fi

echo ""
echo "üöÄ √âtape 5: D√©marrage des services..."
if docker-compose up -d; then
    echo ""
    echo "‚úÖ Services d√©marr√©s avec succ√®s !"
    echo ""
    echo "üìä √âtat des services:"
    docker-compose ps
    echo ""
    echo "üåê URLs disponibles:"
    echo "   ‚Ä¢ Frontend:  http://localhost:5173"
    echo "   ‚Ä¢ Backend:   http://localhost:3001"
    echo "   ‚Ä¢ Adminer:   http://localhost:8080"
    echo "   ‚Ä¢ MailPit:   http://localhost:8025"
    echo ""
    echo "üìù Pour voir les logs en temps r√©el:"
    echo "   docker-compose logs -f frontend"
    echo ""
    echo "üéØ Test de sant√© dans 10 secondes..."
    sleep 10
    
    # Test de sant√© du frontend
    if curl -s http://localhost:5173 > /dev/null; then
        echo "‚úÖ Frontend accessible sur http://localhost:5173"
    else
        echo "‚ö†Ô∏è Frontend pas encore accessible, v√©rifiez les logs:"
        echo "   docker-compose logs frontend"
    fi
    
else
    echo "‚ùå Erreur lors du d√©marrage des services"
    echo ""
    echo "üìã Diagnostic:"
    echo "1. V√©rifier les logs complets:"
    echo "   docker-compose logs"
    echo ""
    echo "2. V√©rifier l'√©tat des conteneurs:"
    echo "   docker-compose ps"
    echo ""
    echo "3. Red√©marrer manuellement:"
    echo "   docker-compose up --force-recreate"
    exit 1
fi

echo ""
echo "üéâ Correction termin√©e avec succ√®s !"
echo "L'application est maintenant disponible sur http://localhost:5173"
